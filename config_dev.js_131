var config = {"settings": {"add_css_file":false , "add_js_file":false , "custom_lang":false , "head_write_js":"" , "head_write_css":"" , "format":"table" , "messages":{"intro":"Salesforce 認定デベロッパー 練習問題"}} ,"questions":[
{"question": "【過去問】Q70.レコードの所有者が共有ボタンで共有設定ができるのはどんなときか？1つ選択" ,"choice":["オブジェクトが非公開または参照のみになっているとき" ,"開発者が「レコードの共有」権限を与えたとき" ,"オブジェクトが「作成・参照・更新」可能のとき" ,"開発者がレイアウトに「共有」ボタンを追加したとき"] ,"answer":["オブジェクトが非公開または参照のみになっているとき"] ,"feedback_tf":["" ,""]}
, {"question": "【過去問】Q71.レポートについて間違っていることはどれか？1つ選択" ,"choice":["クロス条件を使用して子オブジェクトでデータを絞り込める" ,"異常値を色分けする強調表示を設定できる" ,"前回実行したレポートの結果を保存できる" ,"レポートを定期実行でメールで送信できる"] ,"answer":["前回実行したレポートの結果を保存できる"] ,"feedback_tf":["" ,""]}
, {"question": "【移行試験】1.宣言に関する記述として正しいものは、次のうちどれですか。答えを 3 個選択してください" ,"choice":["static キーワードと final キーワードを使用して定数を定義できる" ,"virtual キーワードを使用して宣言したクラスは extend できる" ,"静的イニシャライザ内で static final 変数を変更することはできない" ,"final キーワードを使用したクラスやメソッドを宣言することはできない" ,"final 変数の宣言時は値を代入できない"] ,"answer":["static キーワードと final キーワードを使用して定数を定義できる" ,"virtual キーワードを使用して宣言したクラスは extend できる" ,"final キーワードを使用したクラスやメソッドを宣言することはできない"] ,"feedback_tf":["" ,""]}
, {"question": "【移行試験】2.開発者が、組織のデータを変更せずに、Account トリガが正しく機能しているかどうかを確認する必要があります。Account トリガをテストするには、どうすればよいですか。" ,"choice":["Force.com IDE のリリースを使用して、「insert Account」Apex クラスをリリースする" ,"開発者コンソールの [Test] メニューを使用して、account トリガのテストクラスをすべて実行する" ,"Salesforce の 取引先タブの [新規] ボタンを使用して、新規取引先レコードを作成する" ,"開発者コンソールの [Open Execute Anonymous Window] を使用して、「insert Account」DML ステートメントを実行する"] ,"answer":["開発者コンソールの [Test] メニューを使用して、account トリガのテストクラスをすべて実行する"] ,"feedback_tf":["トリガのテストが目的のため、実データが変更されうる選択肢は当然除外となる。" ,"トリガのテストが目的のため、実データが変更されうる選択肢は当然除外となる。"]}
, {"question": "【移行試験】3.次のコードブロックは、どのような結果になりますか。<br>Integer x = 1;<br>Integer y = 0;<br>while(x ＜ 10)｛<br>y++;<br>｝<br>" ,"choice":["x = 0" ,"y = 9" ,"エラーが発生する" ,"y = 10"] ,"answer":["エラーが発生する"] ,"feedback_tf":["無限ループ実行となり、ガバナにより制御される" ,"無限ループ実行となり、ガバナにより制御される"]}
, {"question": "【移行試験】4.あるレコードの数値項目の初期値が 1 になっています。ユーザがこの数値項目の値を 10 に更新しました。このアクションによりワークフロー項目自動更新が呼び出され、数値項目の値が 11 に変更されます。ワークフロー項目自動更新の後、update トリガが起動します。<br>Trigger.old から取得されるオブジェクトの数値項目値は、次のうちどれですか。" ,"choice":["1" ,"10" ,"11" ,"null"] ,"answer":["1"] ,"feedback_tf":["Trigger.oldはデータロードされた時点の値で、コミットまでのロジックオーダーが完了するまでの間、当然同じ値となる" ,"Trigger.oldはデータロードされた時点の値で、コミットまでのロジックオーダーが完了するまでの間、当然同じ値となる"]}
, {"question": "【移行試験】5.Lightning コンポーネントのリソースバンドルには何を含めることができますか。答えを 2 個選択してください" ,"choice":["カスタムのクライアント側レンダラ" ,"そのコンポーネントに対する CSS スタイル" ,"ファイルサイズ縮小のためのビルド・スクリプト" ,"グローバル設定を含むプロパティファイル"] ,"answer":["カスタムのクライアント側レンダラ" ,"そのコンポーネントに対する CSS スタイル"] ,"feedback_tf":["" ,""]}
, {"question": "【移行試験】6.商談レコードタイプのすべてのラベルを取得してリストに格納には、どうすればよいですか。答えを 2 個選択してください" ,"choice":["Opportunity.RecordType.Name 項目から値を抽出する for ループを記述する" ,"グローバル変数 $RecordType を使用して、マップからリストを抽出する" ,"商談オブジェクトに対する describe オブジェクトの結果を取得する" ,"RecordType オブジェクトに対して反復処理する SOQL for ループを記述する"] ,"answer":["Opportunity.RecordType.Name 項目から値を抽出する for ループを記述する" ,"RecordType オブジェクトに対して反復処理する SOQL for ループを記述する"] ,"feedback_tf":["" ,""]}
, {"question": "【移行試験】7.ある企業が、応募者に内定通知を送信し、応募者がその通知に電子的に署名して返信できるようにしたいと考えています。これを実現するには、どうすればよいですか。" ,"choice":["内定通知を応募者に割り当てる割り当てルールを作成する" ,"内定通知を送信し、応募者がその通知に電子的に署名できるプロセスビルダーを作成する" ,"応募者の署名を電子的にキャプチャする Visual Workflow を作成する" ,"応募者がドキュメントに電子的に署名できる管理パッケージをインストールする"] ,"answer":["応募者がドキュメントに電子的に署名できる管理パッケージをインストールする"] ,"feedback_tf":["電子署名を実現したい、という点だけ見れば標準での解決ではできないため、AppExchangeで実現できるものを探すのが適切" ,"電子署名を実現したい、という点だけ見れば標準での解決ではできないため、AppExchangeで実現できるものを探すのが適切"]}
, {"question": "【移行試験】8.Apex の debug ステートメントを使用して、今週作成された取引先と、その関連取引先責任者の数を表示するには、どれを使用すればよいですか。" ,"choice":["for(Account acc:[SELECT Id, Name, Account.Contacts FROM Account WHERE CreatedDate = CURRENT_WEEK]){<br>List cons = acc.Account.Contacts;<br>system.debug(acc.Name + ' has '+cons.size() +' Contacts');<br>}" ,"for(Account acc:[SELECT Id, Name, Account.Contacts FROM Account WHERE CreatedDate = THIS_WEEK]){<br>List cons = acc.Account.Contacts;<br>system.debug(acc.Name + ' has '+cons.size() +' Contacts');<br>}" ,"for(Account acc:[SELECT Id, Name, (SELECT Id, Name FROM Contacts) FROM Account WHERE CreatedDate = THIS_WEEK]){<br>List cons = acc.Contacts;<br>system.debug(acc.Name + ' has '+cons.size() +' Contacts');<br>}" ,"for(Account acc:[SELECT Id, Name, (SELECT Id, Name FROM Contacts) FROM Account WHERE CreatedDate = CURRENT_WEEK]){<br>List cons = acc.Contacts;<br>system.debug(acc.Name + ' has '+cons.size() +' Contacts');<br>}"] ,"answer":["for(Account acc:[SELECT Id, Name, (SELECT Id, Name FROM Contacts) FROM Account WHERE CreatedDate = THIS_WEEK]){<br>List cons = acc.Contacts;<br>system.debug(acc.Name + ' has '+cons.size() +' Contacts');<br>}"] ,"feedback_tf":["本当はどれもジェネリクスで型指定をしていないため全選択肢が×、消去法で" ,"本当はどれもジェネリクスで型指定をしていないため全選択肢が×、消去法で"]}
]}
