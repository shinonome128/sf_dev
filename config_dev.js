var config = {"settings": {"add_css_file":false , "add_js_file":false , "custom_lang":false , "head_write_js":"" , "head_write_css":"" , "format":"table" , "messages":{"intro":"Salesforce 認定デベロッパー 練習問題"}} ,"questions":[
{"question": "以下の要件があります。開発者はどのイベントのケーストリガーを作成すべきですか？（2つ選択）関連する取引先の値に基づき、ケース項目「KeyPerson__c」に値を設定する。" ,"choice":["Before Update" ,"After Insert" ,"Before Insert" ,"After Update"] ,"answer":["Before Update" ,"Before Insert"] ,"feedback_tf":["" ,""]}
, {"question": "トリガのカスケード実行（連鎖実行）について正しい記述はどれか（1つ選択）" ,"choice":["トリガのカスケード実行により例外が発生する" ,"カスケード実行トリガも、同じ実行コンテキストで動作しガバナ制限を共有する" ,"各トリガーは新しい実行コンテキストを開始します" ,"カスケード実行できるトリガーは5つまでとの制限がある"] ,"answer":["カスケード実行トリガも、同じ実行コンテキストで動作しガバナ制限を共有する"] ,"feedback_tf":["" ,""]}
, {"question": "下記の中で、Before Updateトリガでは実行できないアクションはどれか（2つ選択）" ,"choice":["Trigger.newを使い項目の値を変更する" ,"Trigger.old の値を修正する" ,"値の変更を受け入れる前に、入力チェックを行う" ,"レコードの変更を回避するため、Trigger.new を削除する"] ,"answer":["Trigger.old の値を修正する" ,"レコードの変更を回避するため、Trigger.new を削除する"] ,"feedback_tf":["" ,""]}
, {"question": "既存の「契約」を更新する為、以下の「商談」トリガがある。「商談」を2,000件読み込んだ場合、「契約」は何件更新される？（１つ選択）<pre><br>List<Contract> getContracts = new List<Contract>();<br>for(Opportunity opp: (List<Opportunity>) Trigger.New) {<br>	Contract con = [SELECT Id FROM Contract WHERE Id =: opp.ContractId];<br>	con.Description = ‘This is the contract for Opportunity ‘ + opp.Name;<br>	getContracts.add(con);<br>}<br>update getContracts;<br></pre>" ,"choice":["2,000" ,"100" ,"1" ,"0"] ,"answer":["0"] ,"feedback_tf":["" ,""]}
, {"question": "Apexトリガを書くとき、何を考慮しておく必要がある？（２つ選択）" ,"choice":["オブジェクト毎に、Apexトリガは一つにする必要がある" ,"Apexトリガにはロジックを書かず、Handlerクラスに移譲する" ,"Apexトリガは他のトリガを起動すべきでない" ,"ApexトリガはDML実行時に@futureアノテーションを付けるべき"] ,"answer":["オブジェクト毎に、Apexトリガは一つにする必要がある" ,"Apexトリガにはロジックを書かず、Handlerクラスに移譲する"] ,"feedback_tf":["" ,""]}
, {"question": "次のコードのうち、ループ文に含めてはいけないのは？（２つ選択）" ,"choice":["insert accountList;" ,"System.debug(‘The following account has been updated’ + ‘acc.Id ‘);" ,"Opportunity getOpp = [SELECT Id, AccountId FROM Opportunity WHERE AccountId =: acc.Id];" ,"if(acc.NumberOfEmployees > 5000){"] ,"answer":["insert accountList;" ,"Opportunity getOpp = [SELECT Id, AccountId FROM Opportunity WHERE AccountId =: acc.Id];"] ,"feedback_tf":["" ,""]}
, {"question": "以下の標準オブジェクトの内、DML操作のサポート外なのはどれ？（２つ選択）" ,"choice":["プロファイル" ,"ユーザー" ,"ケース" ,"レコードタイプ"] ,"answer":["プロファイル" ,"レコードタイプ"] ,"feedback_tf":["" ,""]}
, {"question": "検索結果に含める情報を指定するにはSOSL文に何句を追加する？（１つ選択）" ,"choice":["LIMIT n" ,"RETURNING" ,"OFFSET n" ,"ORDER BY"] ,"answer":["RETURNING"] ,"feedback_tf":["" ,""]}
, {"question": "下記SOSL文の検索結果で、取引先60件が抽出される想定だったが、実際は取引先20件。SOSLのLIMIT指定について正しい記述は？（１つ選択）<pre><br>FIND {test} RETURNING Account(id), Contact, Opportunity LIMIT 60<br></pre>" ,"choice":["SOSLクエリではLIMIT指定ができない" ,"検索結果が戻ってきたオブジェクトで均等に分割された" ,"LIMITはオブジェクト毎に個別指定しなければならない" ,"上記SOSLは構文が正しくない"] ,"answer":["検索結果が戻ってきたオブジェクトで均等に分割された"] ,"feedback_tf":["" ,""]}
, {"question": "次のDML文のうち、エラーでないレコードだけ挿入できるのはどれ？（１つ選択）" ,"choice":["insert sObjectsToCreate;" ,"upsert sObjectsToCreate;" ,"Database.insert(sObjectsToCreate,true);" ,"Database.insert(sObjectsToCreate,false);"] ,"answer":["Database.insert(sObjectsToCreate,false);"] ,"feedback_tf":["" ,""]}
]}
